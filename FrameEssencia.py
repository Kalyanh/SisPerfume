"""Subclass of FrameEssencia, which is generated by wxFormBuilder."""

import wx
import guiperfumes
import db

# Implementing FrameEssencia
class FrameEssencia( guiperfumes.FrameEssencia ):
	def __init__( self, parent ):
		guiperfumes.FrameEssencia.__init__( self, parent )
		self.atualizarGrid()

	# Handlers for FrameEssencia events.
	def fecharFrame( self, event ):
		self.Show(False)
		# TODO: Implement fecharFrame
		#pass

	def adicionarEssencia( self, event ):
		nome = self.txtNome.GetValue()
		db.inserirEssencia(nome)
		wx.MessageBox(message="Essência Inserida com Sucesso", caption="SisPerfumes", style=wx.OK, parent=self)
		self.atualizarGrid()
		# TODO: Implement adicionarEssencia
		#pass

	def atualizarEssência( self, event ):
		nome_essencia = self.gridEssências.GetCellValue(event.GetRow(), event.GetCol())
		if (nome_essencia):
			id_essencia = int(self.gridEssências.GetCellValue(event.GetRow(),
														  0))  # Pegue na linha editada, o conteúdo da primeira coluna
			db.atualizarEssencia(id_essencia, nome_essencia)  # Chame a função para atualizar uma marca
			wx.MessageBox(message="Essência Atualizada com Sucesso", caption="SysPerfumes", style=wx.OK, parent=self)
		# TODO: Implement atualizarEssência
		pass
	def atualizarGrid(self):
		if (self.gridEssências.GetNumberRows()>0):
			self.gridEssências.DeleteRows(0,self.gridEssências.GetNumberRows()) #Limpa a tabela
		essencias=db.listarEssencia() #Chama a função listar marcas, retornando a lista de marcas existentes
		for essencia in essencias:
			self.gridEssências.AppendRows(1)#Adiciona uma linha em branco
			self.gridEssências.SetCellValue(self.gridEssências.GetNumberRows()-1,0,str(essencia[0])) #adicione o id da marca
			self.gridEssências.SetCellValue(self.gridEssências.GetNumberRows() - 1, 1, essencia[1]) #adiciona o nome da marca
			self.gridEssências.SetReadOnly(self.gridEssências.GetNumberRows() - 1, 0, True) #Informa que a coluna 0(ID) é somente leitura



